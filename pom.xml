<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.emotions</groupId>
	<artifactId>feely</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>


	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.3.RELEASE</version>
	</parent>

	<!-- Variables filtered later on in the POM -->
	<properties>
		<db.module.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.module.url>
		<db.module.database.name>feely</db.module.database.name>
		<db.module.userId>postgres</db.module.userId>

		<db.root.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.root.url>
		<db.root.userId>postgres</db.root.userId>
		<db.root.password>nikos8516</db.root.password>

		<db.init.skip>false</db.init.skip>
	</properties>

	<build>

		<finalName>feely-${project.version}</finalName>
		<pluginManagement>
			<plugins>

				<plugin>
					<!-- specify copy-resources method and configuration -->
					<!-- In order to keep track of our docker container generator we will 
						copy our Dockerfile in out target generated sources to alwways have an updated 
						version of it -->
					<!-- Dockerfile is hitherto empty. Will -->
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory> ${project.build.directory} </outputDirectory>
								<resources>
									<resource>
										<directory>.</directory>
										<includes>
											<include>Dockerfile</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Include versioning in .war -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<webResources>
							<resource>
								<filtering>true</filtering>
								<directory>src/main/webapp</directory>
								<includes>
									<include>version</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>

				<!-- Database creation and configuration -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>
					<!-- Specify the dependent JDBC driver here -->
					<dependencies>
						<dependency>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
							<version>9.4-1201-jdbc41</version>
						</dependency>

					</dependencies>

					<!-- Cpnfigure database connection and credentials -->
					<configuration>
						<driver>org.postgresql.Driver</driver>
						<url>${db.root.url}</url>
						<username>${db.root.userId}</username>
						<password>${db.root.password}</password>
						<enableFiltering>true</enableFiltering>
						<autocommit>true</autocommit>
						<orderFile>ascending</orderFile>
					</configuration>

					<executions>
						<execution>
							<id>init-db</id>
							<phase>validate</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<sqlCommand>
									DROP DATABASE IF EXISTS ${db.module.database.name}
									DROP USER IF EXISTS ${db.root.userId}
									CREATE USER
									${db.module.userId} LOGIN PASSWORD
									'${db.module.password}'
									NOCREATEDB NOCREATEROLE NOREPLICATION
									VALID UNTIL 'infinity';
									CREATE DATABASE ${db.module.database.name} WITH ENCODING='UTF8'
									OWNER=${db.module.userId} CONNECTION LIMIT=-1;
								</sqlCommand>
								<skip>${db.init.skip}</skip>
							</configuration>
							<inherited>false</inherited>
						</execution>

						<execution>
							<id>init-db-schema</id>
							<phase>validate</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>${db.root.url}</url>
								<username>${db.root.userId}</username>
								<password>${db.root.password}</password>
								<sqlCommand>
									CREATE SCHEMA ${db.module.database.name}
									AUTHORIZATION
									${db.module.userId};
								</sqlCommand>
								<skip>${db.init.skip}</skip>
							</configuration>
						</execution>

					</executions>

				</plugin>

				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>3.2.1</version>
					<configuration>
						<driver>org.postgresql.Driver</driver>
						<url>${db.module.url}</url>
						<user>${db.module.userId}</user>
						<password>${db.module.password}</password>
						<sqlMigrationPrefix>db_</sqlMigrationPrefix>
						<sqlMigrationSuffix>.sql</sqlMigrationSuffix>
						<encoding>UTF-8</encoding>
						<table>DB_MIGRATION_HISTORY</table>
						<schemas>
							<schema>${db.module.database.name}</schema>
						</schemas>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
							<version>9.4-1201-jdbc41</version>
						</dependency>

					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
			</plugins>

		</pluginManagement>

	</build>

	<dependencies>

		<!-- spring boot web services annotations -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>feely</groupId>
			<artifactId>feely-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- guava functional programming suite -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>

		<!-- google api for geotracking -->
		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-mapsengine</artifactId>
			<version>v1-rev61-1.20.0</version>
		</dependency>

		<!-- jpa annotations (entity etc) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1201-jdbc41</version>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>1.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>



		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

	</dependencies>




</project>